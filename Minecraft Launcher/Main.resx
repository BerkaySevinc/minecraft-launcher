<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>